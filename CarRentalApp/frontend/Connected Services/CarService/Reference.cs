//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace frontend.CarService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarService.ICarService")]
    public interface ICarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/AddCar", ReplyAction="http://tempuri.org/ICarService/AddCarResponse")]
        bool AddCar(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/AddCar", ReplyAction="http://tempuri.org/ICarService/AddCarResponse")]
        System.Threading.Tasks.Task<bool> AddCarAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCars", ReplyAction="http://tempuri.org/ICarService/GetCarsResponse")]
        System.Data.DataSet GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCars", ReplyAction="http://tempuri.org/ICarService/GetCarsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/AssignCar", ReplyAction="http://tempuri.org/ICarService/AssignCarResponse")]
        bool AssignCar(string email, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/AssignCar", ReplyAction="http://tempuri.org/ICarService/AssignCarResponse")]
        System.Threading.Tasks.Task<bool> AssignCarAsync(string email, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/ReturnCar", ReplyAction="http://tempuri.org/ICarService/ReturnCarResponse")]
        bool ReturnCar(string email, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/ReturnCar", ReplyAction="http://tempuri.org/ICarService/ReturnCarResponse")]
        System.Threading.Tasks.Task<bool> ReturnCarAsync(string email, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetUserCar", ReplyAction="http://tempuri.org/ICarService/GetUserCarResponse")]
        System.Data.DataSet GetUserCar(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetUserCar", ReplyAction="http://tempuri.org/ICarService/GetUserCarResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserCarAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetUserCarNames", ReplyAction="http://tempuri.org/ICarService/GetUserCarNamesResponse")]
        System.Data.DataSet GetUserCarNames(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetUserCarNames", ReplyAction="http://tempuri.org/ICarService/GetUserCarNamesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserCarNamesAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarNames", ReplyAction="http://tempuri.org/ICarService/GetCarNamesResponse")]
        string[] GetCarNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarNames", ReplyAction="http://tempuri.org/ICarService/GetCarNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetCarNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        bool DeleteCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        System.Threading.Tasks.Task<bool> DeleteCarAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarServiceChannel : frontend.CarService.ICarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarServiceClient : System.ServiceModel.ClientBase<frontend.CarService.ICarService>, frontend.CarService.ICarService {
        
        public CarServiceClient() {
        }
        
        public CarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCar(string name) {
            return base.Channel.AddCar(name);
        }
        
        public System.Threading.Tasks.Task<bool> AddCarAsync(string name) {
            return base.Channel.AddCarAsync(name);
        }
        
        public System.Data.DataSet GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public bool AssignCar(string email, string name) {
            return base.Channel.AssignCar(email, name);
        }
        
        public System.Threading.Tasks.Task<bool> AssignCarAsync(string email, string name) {
            return base.Channel.AssignCarAsync(email, name);
        }
        
        public bool ReturnCar(string email, string name) {
            return base.Channel.ReturnCar(email, name);
        }
        
        public System.Threading.Tasks.Task<bool> ReturnCarAsync(string email, string name) {
            return base.Channel.ReturnCarAsync(email, name);
        }
        
        public System.Data.DataSet GetUserCar(string email) {
            return base.Channel.GetUserCar(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserCarAsync(string email) {
            return base.Channel.GetUserCarAsync(email);
        }
        
        public System.Data.DataSet GetUserCarNames(string email) {
            return base.Channel.GetUserCarNames(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserCarNamesAsync(string email) {
            return base.Channel.GetUserCarNamesAsync(email);
        }
        
        public string[] GetCarNames() {
            return base.Channel.GetCarNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCarNamesAsync() {
            return base.Channel.GetCarNamesAsync();
        }
        
        public bool DeleteCar(int id) {
            return base.Channel.DeleteCar(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCarAsync(int id) {
            return base.Channel.DeleteCarAsync(id);
        }
    }
}
